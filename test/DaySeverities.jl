import Dates
import Printf
# import Statistics

push!(LOAD_PATH, (@__DIR__) * "/../models/shared")
import TrainingShared

# push!(LOAD_PATH, (@__DIR__) * "/../models/spc_outlooks")
# import SPCOutlooks

# push!(LOAD_PATH, (@__DIR__) * "/../models/combined_href_sref")
# import CombinedHREFSREF

# push!(LOAD_PATH, (@__DIR__) * "/../models/href_prediction")
# import HREFPrediction

# push!(LOAD_PATH, (@__DIR__) * "/../models/href_prediction_ablations")
# import HREFPredictionAblations

# push!(LOAD_PATH, (@__DIR__) * "/../models/href_prediction_ablations2")
# import HREFPredictionAblations2

# push!(LOAD_PATH, (@__DIR__) * "/../models/href_day_experiment")
# import HREFDayExperiment

push!(LOAD_PATH, (@__DIR__) * "/../lib")
import Conus
import Forecasts
import Grids
import GeoUtils
import Grid130
# import PlotMap
import StormEvents
# import ForecastCombinators
using HREF15KMGrid

# const CONUS_ON_HREF_CROPPED_15KM_GRID = Conus.is_in_conus.(HREF_CROPPED_15KM_GRID.latlons)

MINUTE = 60 # seconds
HOUR   = 60*MINUTE

GRID       = Conus.href_cropped_5km_grid();
CONUS_MASK = Conus.conus_mask_href_cropped_5km_grid();

# VERIFIABLE_GRID_MASK = CONUS_MASK .&& TrainingShared.is_verifiable.(GRID.latlons) :: BitVector;

function convective_day_window_mid_time_and_half_size(date)
  start_seconds = Forecasts.time_in_seconds_since_epoch_utc(Dates.year(date), Dates.month(date), Dates.day(date), 12)
  end_seconds   = Forecasts.time_in_seconds_since_epoch_utc(Dates.year(date), Dates.month(date), Dates.day(date + Dates.Day(1)), 12)
  window_half_size = (end_seconds - start_seconds) รท 2
  window_mid_time  = (end_seconds + start_seconds) รท 2
  window_mid_time, window_half_size
end


event_name_to_unadj_events = Dict(
  "tornado"     => StormEvents.conus_tornado_events(),
  "wind"        => StormEvents.conus_severe_wind_events(),
  "hail"        => StormEvents.conus_severe_hail_events(),
  "sig_tornado" => StormEvents.conus_sig_tornado_events(),
  "sig_wind"    => StormEvents.conus_sig_wind_events(),
  "sig_hail"    => StormEvents.conus_sig_hail_events(),
)

function mean(xs)
  sum(xs) / length(xs)
end

compute_day_labels(event_name, date) = begin
  window_mid_time, window_half_size = convective_day_window_mid_time_and_half_size(date)
  if endswith(event_name, "wind_adj")
    measured_events, estimated_events, gridded_normalization =
      if event_name == "wind_adj"
        StormEvents.conus_measured_severe_wind_events(), StormEvents.conus_estimated_severe_wind_events(), TrainingShared.day_estimated_wind_gridded_normalization()
      elseif event_name == "sig_wind_adj"
        StormEvents.conus_measured_sig_wind_events(), StormEvents.conus_estimated_sig_wind_events(), TrainingShared.day_estimated_sig_wind_gridded_normalization()
      else
        error("unknown adj event $event_name")
      end
    measured_labels  = StormEvents.grid_to_event_neighborhoods(measured_events, GRID, TrainingShared.EVENT_SPATIAL_RADIUS_MILES, window_mid_time, window_half_size)
    estimated_labels = StormEvents.grid_to_adjusted_event_neighborhoods(estimated_events, GRID, Grid130.GRID_130_CROPPED, gridded_normalization, TrainingShared.EVENT_SPATIAL_RADIUS_MILES, window_mid_time, window_half_size)
    max.(measured_labels, estimated_labels)
  else
    events = event_name_to_unadj_events[event_name]
    StormEvents.grid_to_event_neighborhoods(events, GRID, TrainingShared.EVENT_SPATIAL_RADIUS_MILES, window_mid_time, window_half_size)
  end
end

test_dates = [
  Dates.DateTime(2019, 10, 20),
  Dates.DateTime(2020, 04, 12),
  Dates.DateTime(2022, 06, 13),
  Dates.DateTime(2022, 06, 20),
  Dates.DateTime(2022, 06, 07),
  Dates.DateTime(2019, 06, 23),
  Dates.DateTime(2019, 05, 26),
  Dates.DateTime(2022, 07, 05),
  Dates.DateTime(2022, 06, 16),
  Dates.DateTime(2020, 05, 03),
  Dates.DateTime(2022, 07, 09),
  Dates.DateTime(2020, 06, 07),
  Dates.DateTime(2022, 07, 22),
  Dates.DateTime(2022, 07, 10),
  Dates.DateTime(2022, 07, 12),
  Dates.DateTime(2019, 04, 14),
  Dates.DateTime(2020, 04, 19),
  Dates.DateTime(2019, 07, 14),
  Dates.DateTime(2022, 06, 12),
  Dates.DateTime(2022, 05, 29),
  Dates.DateTime(2022, 06, 22),
  Dates.DateTime(2021, 05, 02),
  Dates.DateTime(2020, 05, 24),
  Dates.DateTime(2022, 07, 06),
  Dates.DateTime(2022, 06, 08),
  Dates.DateTime(2022, 06, 15),
  Dates.DateTime(2022, 06, 11),
  Dates.DateTime(2019, 08, 11),
  Dates.DateTime(2019, 05, 05),
  Dates.DateTime(2020, 07, 19),
  Dates.DateTime(2020, 07, 12),
  Dates.DateTime(2022, 07, 13),
  Dates.DateTime(2021, 05, 23),
  Dates.DateTime(2022, 07, 27),
  Dates.DateTime(2022, 07, 08),
  Dates.DateTime(2022, 06, 14),
  Dates.DateTime(2020, 08, 16),
  Dates.DateTime(2019, 08, 18),
  Dates.DateTime(2020, 06, 21),
  Dates.DateTime(2022, 03, 06),
  Dates.DateTime(2022, 05, 01),
  Dates.DateTime(2021, 07, 11),
  Dates.DateTime(2020, 06, 28),
  Dates.DateTime(2022, 06, 01),
  Dates.DateTime(2022, 07, 21),
  Dates.DateTime(2022, 05, 15),
  Dates.DateTime(2022, 06, 09),
  Dates.DateTime(2022, 07, 03),
  Dates.DateTime(2021, 06, 20),
  Dates.DateTime(2022, 07, 28),
  Dates.DateTime(2019, 06, 09),
  Dates.DateTime(2019, 09, 01),
  Dates.DateTime(2020, 07, 05),
  Dates.DateTime(2020, 08, 09),
  Dates.DateTime(2021, 10, 10),
  Dates.DateTime(2022, 07, 04),
  Dates.DateTime(2019, 07, 21),
  Dates.DateTime(2021, 07, 04),
  Dates.DateTime(2022, 06, 19),
  Dates.DateTime(2022, 06, 06),
  Dates.DateTime(2022, 06, 17),
  Dates.DateTime(2022, 07, 24),
  Dates.DateTime(2022, 06, 21),
  Dates.DateTime(2022, 07, 23),
  Dates.DateTime(2022, 07, 26),
  Dates.DateTime(2019, 08, 25),
  Dates.DateTime(2022, 07, 16),
  Dates.DateTime(2022, 07, 14),
  Dates.DateTime(2021, 08, 22),
  Dates.DateTime(2022, 06, 03),
  Dates.DateTime(2022, 06, 29),
  Dates.DateTime(2022, 07, 17),
  Dates.DateTime(2022, 06, 18),
  Dates.DateTime(2019, 06, 16),
  Dates.DateTime(2022, 06, 26),
  Dates.DateTime(2020, 08, 23),
  Dates.DateTime(2020, 08, 02),
  Dates.DateTime(2022, 07, 18),
  Dates.DateTime(2019, 04, 21),
  Dates.DateTime(2022, 04, 17),
  Dates.DateTime(2022, 06, 28),
  Dates.DateTime(2021, 08, 15),
  Dates.DateTime(2021, 07, 25),
  Dates.DateTime(2019, 08, 04),
  Dates.DateTime(2021, 12, 05),
  Dates.DateTime(2022, 06, 23),
  Dates.DateTime(2021, 10, 24),
  Dates.DateTime(2022, 06, 25),
  Dates.DateTime(2019, 06, 02),
  Dates.DateTime(2022, 06, 24),
  Dates.DateTime(2022, 05, 22),
  Dates.DateTime(2019, 03, 24),
  Dates.DateTime(2019, 09, 08),
  Dates.DateTime(2019, 03, 03),
  Dates.DateTime(2020, 07, 26),
  Dates.DateTime(2021, 05, 16),
  Dates.DateTime(2022, 06, 02),
  Dates.DateTime(2022, 07, 19),
  Dates.DateTime(2022, 07, 02),
  Dates.DateTime(2021, 03, 28),
  Dates.DateTime(2021, 06, 13),
  Dates.DateTime(2021, 06, 06),
  Dates.DateTime(2021, 08, 08),
  Dates.DateTime(2022, 07, 07),
  Dates.DateTime(2021, 05, 09),
  Dates.DateTime(2019, 04, 07),
  Dates.DateTime(2022, 05, 08),
  Dates.DateTime(2022, 07, 20),
  Dates.DateTime(2020, 10, 11),
  Dates.DateTime(2022, 06, 04),
  Dates.DateTime(2020, 06, 14),
  Dates.DateTime(2022, 07, 29),
  Dates.DateTime(2021, 07, 18),
  Dates.DateTime(2022, 06, 05),
  Dates.DateTime(2019, 10, 06),
  Dates.DateTime(2021, 08, 29),
  Dates.DateTime(2019, 04, 28),
  Dates.DateTime(2022, 01, 02),
  Dates.DateTime(2022, 07, 25),
  Dates.DateTime(2022, 07, 15),
  Dates.DateTime(2020, 05, 10),
  Dates.DateTime(2022, 01, 09),
  Dates.DateTime(2019, 07, 28),
  Dates.DateTime(2022, 01, 16),
  Dates.DateTime(2019, 05, 12),
  Dates.DateTime(2021, 04, 11),
  Dates.DateTime(2022, 07, 01),
  Dates.DateTime(2022, 07, 30),
  Dates.DateTime(2021, 09, 12),
  Dates.DateTime(2019, 05, 19),
  Dates.DateTime(2019, 09, 29),
  Dates.DateTime(2021, 04, 04),
  Dates.DateTime(2022, 07, 11),
  Dates.DateTime(2019, 07, 07),
  Dates.DateTime(2021, 08, 01),
  Dates.DateTime(2021, 06, 27),
  Dates.DateTime(2021, 09, 05),
  Dates.DateTime(2020, 09, 27),
  Dates.DateTime(2022, 04, 24),
  Dates.DateTime(2022, 06, 10),
  Dates.DateTime(2019, 12, 29),
  Dates.DateTime(2022, 04, 10),
  Dates.DateTime(2020, 08, 30),
  Dates.DateTime(2020, 04, 26),
  Dates.DateTime(2020, 09, 06),
  Dates.DateTime(2020, 02, 23),
  Dates.DateTime(2021, 09, 19),
  Dates.DateTime(2020, 03, 29),
  Dates.DateTime(2022, 06, 27),
  Dates.DateTime(2019, 01, 20),
  Dates.DateTime(2020, 05, 17),
  Dates.DateTime(2021, 04, 18),
  Dates.DateTime(2020, 02, 09),
  Dates.DateTime(2021, 10, 03),
  Dates.DateTime(2019, 01, 27),
  Dates.DateTime(2019, 06, 30),
  Dates.DateTime(2022, 07, 31),
  Dates.DateTime(2022, 06, 30),
  Dates.DateTime(2020, 05, 31),
  Dates.DateTime(2021, 05, 30),
  Dates.DateTime(2019, 12, 01),
  Dates.DateTime(2019, 10, 27),
  Dates.DateTime(2020, 01, 12),
  Dates.DateTime(2019, 02, 24),
  Dates.DateTime(2022, 04, 03),
  Dates.DateTime(2021, 09, 26),
  Dates.DateTime(2019, 09, 22),
  Dates.DateTime(2019, 10, 13),
  Dates.DateTime(2019, 12, 22),
  Dates.DateTime(2022, 03, 20),
  Dates.DateTime(2020, 03, 15),
  Dates.DateTime(2020, 10, 18),
  Dates.DateTime(2019, 03, 10),
  Dates.DateTime(2020, 09, 20),
  Dates.DateTime(2020, 10, 04),
  Dates.DateTime(2021, 04, 25),
  Dates.DateTime(2019, 12, 08),
  Dates.DateTime(2019, 02, 17),
  Dates.DateTime(2021, 12, 26),
  Dates.DateTime(2019, 02, 10),
  Dates.DateTime(2021, 03, 21),
  Dates.DateTime(2020, 03, 01),
  Dates.DateTime(2019, 02, 03),
  Dates.DateTime(2019, 01, 13),
  Dates.DateTime(2019, 03, 17),
  Dates.DateTime(2019, 03, 31),
  Dates.DateTime(2019, 09, 15),
  Dates.DateTime(2019, 11, 03),
  Dates.DateTime(2019, 11, 10),
  Dates.DateTime(2019, 11, 24),
  Dates.DateTime(2019, 12, 15),
  Dates.DateTime(2020, 01, 05),
  Dates.DateTime(2020, 01, 19),
  Dates.DateTime(2020, 01, 26),
  Dates.DateTime(2020, 02, 02),
  Dates.DateTime(2020, 02, 16),
  Dates.DateTime(2020, 03, 08),
  Dates.DateTime(2020, 04, 05),
  Dates.DateTime(2020, 09, 13),
  Dates.DateTime(2021, 10, 17),
  Dates.DateTime(2021, 10, 31),
  Dates.DateTime(2021, 11, 07),
  Dates.DateTime(2021, 11, 14),
  Dates.DateTime(2021, 11, 21),
  Dates.DateTime(2021, 11, 28),
  Dates.DateTime(2021, 12, 12),
  Dates.DateTime(2022, 01, 23),
  Dates.DateTime(2022, 01, 30),
  Dates.DateTime(2022, 02, 06),
  Dates.DateTime(2022, 02, 13),
  Dates.DateTime(2022, 02, 20),
  Dates.DateTime(2022, 03, 13),
  Dates.DateTime(2022, 03, 27),
  Dates.DateTime(2022, 02, 27),
  Dates.DateTime(2021, 12, 19),
  Dates.DateTime(2019, 11, 17),
]

println("date,nreports,nsig_reports,nmeasured_reports,nest_reports,nmeasured_sig_reports,nest_sig_reports,wind_severity,wind_adj_severity,sig_wind_severity,sig_wind_adj_severity")
with_severity = map(test_dates) do date
  window_mid_time, window_half_size = convective_day_window_mid_time_and_half_size(date)

  nreports              = length(StormEvents.event_segments_around_time(StormEvents.conus_severe_wind_events(),           window_mid_time, window_half_size))
  nsig_reports          = length(StormEvents.event_segments_around_time(StormEvents.conus_sig_wind_events(),              window_mid_time, window_half_size))
  nmeasured_reports     = length(StormEvents.event_segments_around_time(StormEvents.conus_measured_severe_wind_events(),  window_mid_time, window_half_size))
  nest_reports          = length(StormEvents.event_segments_around_time(StormEvents.conus_estimated_severe_wind_events(), window_mid_time, window_half_size))
  nmeasured_sig_reports = length(StormEvents.event_segments_around_time(StormEvents.conus_measured_sig_wind_events(),     window_mid_time, window_half_size))
  nest_sig_reports      = length(StormEvents.event_segments_around_time(StormEvents.conus_estimated_sig_wind_events(),    window_mid_time, window_half_size))

  wind_severity         = sum(compute_day_labels("wind",         date) .* CONUS_MASK .* GRID.point_areas_sq_miles)
  wind_adj_severity     = sum(compute_day_labels("wind_adj",     date) .* CONUS_MASK .* GRID.point_areas_sq_miles)
  sig_wind_severity     = sum(compute_day_labels("sig_wind",     date) .* CONUS_MASK .* GRID.point_areas_sq_miles)
  sig_wind_adj_severity = sum(compute_day_labels("sig_wind_adj", date) .* CONUS_MASK .* GRID.point_areas_sq_miles)

  println(join(Any[date, nreports, nsig_reports, nmeasured_reports, nest_reports, nmeasured_sig_reports, nest_sig_reports, wind_severity, wind_adj_severity, sig_wind_severity, sig_wind_adj_severity], ","))
end


# date,nreports,nsig_reports,nmeasured_reports,nest_reports,nmeasured_sig_reports,nest_sig_reports,wind_severity,wind_adj_severity,sig_wind_severity,sig_wind_adj_severity
# 2022-07-23T00:00:00,395,7,55,340,3,4,219192.54084240427,81662.87417298408,7203.449325796881,4714.454914698668
# 2020-06-21T00:00:00,190,14,50,140,0,14,186500.0965483701,69981.9913145564,11296.482634172746,1320.6740780455234
# 2022-07-24T00:00:00,252,4,12,240,0,4,118517.85332039435,28827.198940734423,7421.417095373882,906.0938059959713
# 2022-07-21T00:00:00,225,10,18,207,0,10,153179.99325722526,31390.2708788979,10449.86802244547,200.36591510072762
# 2022-06-13T00:00:00,447,123,57,390,8,115,176152.44395246275,82928.5194975949,46220.92087627432,22254.330571552804
# 2022-07-18T00:00:00,105,4,26,79,1,3,71373.93899076263,35842.267456153386,5712.821468818233,2111.432340111648
# 2022-06-17T00:00:00,634,6,16,618,0,6,261147.3057900825,40481.87848094545,7618.69888951398,226.3163044897895
# 2022-06-15T00:00:00,225,24,11,214,1,23,104967.04760442236,22496.318110295877,15117.57385686054,2368.4748649372636
# 2022-06-16T00:00:00,383,23,15,368,0,23,197059.60513071614,36533.22341281853,27406.92500326533,4182.885781859179
# 2022-07-05T00:00:00,307,41,92,215,19,22,200297.23770706565,96553.2913910021,29987.318623908162,21849.077701512328
# 2020-07-05T00:00:00,142,6,30,112,2,4,126101.77153518415,44676.05553430212,8815.148293132796,4188.840335902973
# 2022-06-12T00:00:00,118,13,46,72,5,8,120301.01923599989,78252.9464972788,18807.727069335077,12535.157429516927
# 2022-07-12T00:00:00,406,27,30,376,3,24,151275.95679179812,38422.57864462896,20440.890119318407,5049.50566866141
# 2021-06-13T00:00:00,191,2,7,184,0,2,139538.19608658046,22072.403192472273,2857.567854641293,31.719148953898703
# 2022-07-13T00:00:00,111,7,20,91,2,5,105226.30370410929,41668.37064960978,12726.028150754728,3149.897343892833
# 2020-06-28T00:00:00,136,6,22,114,4,2,114986.99652632138,44926.21967606534,10832.439385750271,7583.934803536827
# 2019-08-18T00:00:00,289,6,9,280,1,5,161107.92790509958,20534.80460521613,11334.815879072976,3344.816952662979
# 2020-07-19T00:00:00,246,16,17,229,3,13,159174.8320896718,37286.29750154096,14237.627474014564,6814.839009524507
# 2020-05-24T00:00:00,106,10,27,79,4,6,113074.63782751866,48922.06623456128,16711.29123191647,7799.730802094093
# 2019-05-26T00:00:00,226,24,36,190,3,21,161201.04207389383,70716.59014917168,30702.603629607765,7929.409069016904
# 2019-06-23T00:00:00,248,24,15,233,0,24,200730.913940901,34830.25368132113,33711.34671935624,1292.0556080689196
# 2022-07-20T00:00:00,94,1,5,89,0,1,93423.31508134824,17544.099167178516,1972.6130889118722,151.22082761677925
# 2019-04-14T00:00:00,463,17,32,431,1,16,233787.95036556874,37992.948804888954,19880.178298089595,2622.0773719587073
# 2022-07-17T00:00:00,117,6,34,83,3,3,101669.30251943036,41542.84172223369,6180.523682731531,2134.5518760650357
# 2021-06-20T00:00:00,174,6,9,165,0,6,98427.4741654536,21412.77142694228,9822.011068500555,489.33627660545784
# 2022-07-22T00:00:00,184,25,70,114,6,19,104842.65789574986,68356.23582101101,23036.22707629989,10953.58315260588
# 2020-07-12T00:00:00,106,11,17,89,1,10,97174.37401168092,37042.64166762568,13068.318299694878,3208.398661811183
# 2022-05-22T00:00:00,167,2,5,162,0,2,94798.43632884085,7033.835549211437,3935.8325531095456,85.71624202773783
# 2022-06-08T00:00:00,256,10,59,197,3,7,164308.8793273081,60249.64660815366,16130.217961052163,4896.677452621163
# 2019-06-02T00:00:00,83,4,12,71,1,3,65156.463723301335,19293.160174790904,4007.867382504912,2142.942678597532
# 2022-07-01T00:00:00,134,0,15,119,0,0,103977.79749115798,29708.43130726835,0.0,0.0
# 2022-07-02T00:00:00,105,2,32,73,1,1,94095.33521080416,43985.63078704113,3387.2238924996072,2056.0554602478796
# 2020-08-09T00:00:00,85,8,16,69,1,7,87619.4016653611,31239.937584264535,8263.139741726978,2133.1083758575223
# 2022-06-14T00:00:00,186,22,20,166,4,18,111739.01155485248,30400.239826459932,11670.032373078166,8431.457282851958
# 2019-06-30T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-07-08T00:00:00,129,8,33,96,5,3,133612.9589979469,47783.01899084675,11721.4294047672,5839.659148875707
# 2019-06-16T00:00:00,94,6,14,80,0,6,72299.8244551695,20136.972505358146,6150.223358120665,202.94843465255624
# 2022-07-14T00:00:00,61,6,21,40,0,6,74815.09527804326,40561.28827011233,6656.791166707693,2024.7499411842107
# 2019-05-19T00:00:00,140,0,3,137,0,0,94955.09274960641,9249.116316289665,0.0,0.0
# 2022-07-25T00:00:00,75,1,9,66,0,1,56708.80519001952,11705.425606733497,1933.841900668655,29.272020957386868
# 2022-06-01T00:00:00,106,5,13,93,3,2,82736.24501169582,21557.16312599615,10752.42534089,6834.738126233795
# 2022-07-28T00:00:00,58,5,13,45,0,5,67278.81592195941,23959.193746599387,9757.082925594492,580.6753476258261
# 2022-05-15T00:00:00,168,7,19,149,0,7,118052.10462379512,32789.76993897497,10332.196661376405,311.55787480087156
# 2022-06-24T00:00:00,112,2,32,80,2,0,105613.20675429203,52958.90544836299,3940.2077995777654,3940.2077995777654
# 2019-07-21T00:00:00,194,5,17,177,1,4,108734.23869090348,31889.782213917046,7911.688733295361,2134.3139759770706
# 2022-07-06T00:00:00,247,9,15,232,3,6,155560.45919589864,32964.17628370166,16516.99408915231,6794.082373238018
# 2021-07-11T00:00:00,89,7,35,54,6,1,75288.58908894041,36700.48673403899,11077.678623322703,9197.198232892337
# 2020-04-12T00:00:00,643,44,21,622,0,44,284614.8130015599,53127.487290976685,48329.94551250107,1849.0631197762134
# 2019-07-14T00:00:00,75,11,38,37,8,3,86957.8467197647,57943.60921669991,19118.545889727928,14268.977999545486
# 2021-08-01T00:00:00,46,0,5,41,0,0,50389.09453349961,5935.322961247895,0.0,0.0
# 2022-06-06T00:00:00,65,6,24,41,3,3,64819.692724701796,31573.459171201022,7675.91333301262,6353.042842332085
# 2020-08-02T00:00:00,42,3,12,30,2,1,55777.33247798546,23186.02440558643,5837.40359785361,3904.1328477808665
# 2022-07-09T00:00:00,115,16,52,63,7,9,118720.06886179381,67585.69250964792,24748.857534551466,13630.137654159023
# 2022-06-22T00:00:00,308,16,6,302,0,16,127178.9404412036,18698.754372549814,17544.50321232513,866.6384653051002
# 2020-08-23T00:00:00,87,4,15,72,3,1,52378.592982361835,24269.55656183582,5952.2750165054,5834.329187106348
# 2022-07-16T00:00:00,109,5,21,88,1,4,89534.7796015231,39245.38514334318,6933.582188488024,2740.9497387037677
# 2022-06-23T00:00:00,49,2,14,35,1,1,51619.980631422266,20827.009182196347,4184.570692819933,1933.233477677522
# 2022-06-07T00:00:00,184,34,74,110,14,20,137469.26728256312,84927.17002791805,33850.93383351275,22422.633511774813
# 2019-07-28T00:00:00,75,1,7,68,0,1,56209.27510330287,15978.846061932763,1896.408016640859,25.001472875636324
# 2022-06-26T00:00:00,39,3,3,36,0,3,50183.620445758264,7012.192787001189,6021.171332573884,569.2654366583209
# 2022-06-02T00:00:00,173,2,8,165,0,2,86124.10305805433,12691.228273185781,3640.879209525103,84.55355264015117
# 2020-08-16T00:00:00,140,7,53,87,3,4,108897.24192008619,62692.008058556414,11638.02174552263,7800.904248296455
# 2021-03-28T00:00:00,150,2,13,137,0,2,58357.14967880456,14561.078411644434,3031.310164838428,98.44916226898123
# 2021-08-29T00:00:00,66,1,3,63,0,1,68750.00312259133,10413.380400432661,1945.940394470584,166.27908644157822
# 2022-06-20T00:00:00,221,27,84,137,11,16,143308.5509760111,105824.95892345118,36523.632984967044,23401.63161607425
# 2022-07-03T00:00:00,72,8,29,43,2,6,82293.40700881755,54468.95622463637,9980.310286567217,4684.681164530203
# 2022-07-27T00:00:00,57,7,12,45,2,5,66954.36092658111,30917.52899856883,11759.72268651721,4547.026175718939
# 2022-07-19T00:00:00,39,2,4,35,1,1,42106.17469111798,8448.381912025552,3597.66037340617,3323.7826906734317
# 2022-07-07T00:00:00,98,1,8,90,0,1,81467.7291280064,17608.933147537668,2055.714359684915,87.3277096155213
# 2022-06-29T00:00:00,63,3,36,27,2,1,71060.31597401417,57807.57554592119,6262.789154109744,4096.046555944444
# 2021-07-18T00:00:00,34,1,9,25,0,1,45680.255664535,20399.83574392945,1955.6239060291189,115.54223272925945
# 2022-06-18T00:00:00,24,4,10,14,2,2,33274.72215869004,20217.19239493241,6161.752775912433,3982.685092834353
# 2019-08-04T00:00:00,48,3,9,39,0,3,45173.3125297155,21469.229482772367,4547.203586904197,1681.2894651019042
# 2021-07-25T00:00:00,41,3,22,19,1,2,53369.61266584227,41946.777799486954,4692.997283505201,2111.806299283553
# 2022-05-01T00:00:00,53,8,21,32,1,7,46628.701738842625,27471.097464879567,11152.585856447526,3198.3634328978965
# 2022-05-29T00:00:00,103,25,37,66,3,22,78141.28759926026,61447.297337791206,18371.158296497797,9093.031612025372
# 2022-06-09T00:00:00,90,6,43,47,3,3,63187.9129213302,44158.900412123425,10019.266706836248,6437.997789078952
# 2022-06-19T00:00:00,69,4,47,22,2,2,71102.20254891654,59616.38407098635,7817.541215829531,4102.701241960386
# 2022-07-10T00:00:00,102,12,54,48,7,5,96271.30891142346,70540.55256057665,20443.58856298624,13185.841319202056
# 2022-07-15T00:00:00,35,1,29,6,1,0,36157.318007511145,34513.58813246872,1927.5590883689515,1927.5590883689515
# 2021-08-08T00:00:00,28,2,2,26,0,2,36634.96898377798,7729.927048493259,2115.7794361617775,67.1077777831191
# 2019-04-07T00:00:00,83,1,12,71,0,1,80012.39933500648,23126.280558153176,1987.4044755288644,177.5854585067296
# 2021-07-04T00:00:00,33,4,23,10,1,3,48198.92227303039,40343.301161802345,7839.632689290437,2533.1480466598387
# 2022-06-11T00:00:00,78,30,32,46,7,23,59560.90904981675,44039.235968656845,14929.22338902634,12211.036546567464
# 2022-07-26T00:00:00,49,4,7,42,0,4,50815.60285785234,14320.14410161111,7174.65178858346,1054.7039104269368
# 2022-07-11T00:00:00,13,0,3,10,0,0,17549.4928711126,6284.604846037284,0.0,0.0
# 2022-07-29T00:00:00,30,1,6,24,0,1,35586.88154942857,11365.10184336551,1960.1633351352393,75.61176927523628
# 2022-06-03T00:00:00,41,3,16,25,1,2,52489.30888173856,25520.544329035325,6318.49473647167,2319.860792604838
# 2019-05-05T00:00:00,70,13,13,57,4,9,52236.929075026535,21161.1294640498,14345.226391080285,6398.55880898175
# 2019-05-12T00:00:00,59,2,3,56,1,1,37229.64906282338,4633.662370365455,1042.0470549084105,618.4255351142672
# 2020-05-03T00:00:00,231,16,24,207,1,15,108420.09962537813,41296.54694444538,25650.79430487127,3240.645084108575
# 2021-05-23T00:00:00,54,8,34,20,5,3,65186.09074897441,56010.67669615309,11953.20463295764,7521.993773684284
# 2022-06-28T00:00:00,59,3,47,12,3,0,56124.834073944265,44619.72036735262,4985.288907584956,4985.288907584956
# 2022-06-25T00:00:00,27,2,5,22,0,2,29868.34968546528,10693.636521131146,4009.1288490528304,664.4108330919821
# 2022-03-06T00:00:00,32,6,2,30,0,6,39504.11767061682,6243.986281405198,11184.96037228448,380.22634329461596
# 2021-05-09T00:00:00,62,2,3,59,1,1,50357.08987822996,8439.433322598688,2049.5948614940776,2000.883613908832
# 2021-05-02T00:00:00,60,10,33,27,7,3,56210.50707581431,38235.88681749164,16850.27807222341,11440.244888824778
# 2021-08-22T00:00:00,38,12,16,22,6,6,33051.279883683084,17500.136965805737,6641.282820041364,3234.6627665118567
# 2019-07-07T00:00:00,27,0,2,25,0,0,32921.99932518674,6216.263148454391,0.0,0.0
# 2019-10-20T00:00:00,238,45,24,214,2,43,120801.93531764417,39944.70587991658,51245.14043935924,5783.661476964915
# 2020-06-07T00:00:00,135,33,63,72,6,27,65055.648797371505,57659.607366533324,24204.393414464335,13287.2062120423
# 2020-04-19T00:00:00,166,21,6,160,1,20,104587.99754365996,14595.38851555556,19492.536964719577,3991.9880998635253
# 2019-08-11T00:00:00,82,16,45,37,8,8,61130.47062458433,56100.32422198325,14703.910909688293,10817.153757114476
# 2022-06-05T00:00:00,20,1,10,10,0,1,31139.554102489186,17679.216259498444,1951.4008874871295,18.103816827273175
# 2021-10-24T00:00:00,23,2,0,23,0,2,30107.63425899671,2209.70131615347,4019.900861029187,311.88991702331236
# 2020-06-14T00:00:00,20,1,11,9,1,0,30116.885351222532,14111.098857767114,1962.1061964599044,1962.1061964599044
# 2022-07-04T00:00:00,92,4,14,78,3,1,42758.99536642,25760.348125761146,8005.881616952269,5919.432427167591
# 2020-08-30T00:00:00,13,0,1,12,0,0,21153.624437469214,3140.607550185572,0.0,0.0
# 2022-07-31T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-10-10T00:00:00,42,5,12,30,0,5,47122.43882301462,22906.04027277603,8230.499097680326,331.93987500450226
# 2022-06-10T00:00:00,56,0,2,54,0,0,43363.963636090826,4003.2975516955403,0.0,0.0
# 2022-06-21T00:00:00,64,5,6,58,0,5,40817.645468629256,15773.696656734759,7310.1916958940665,302.90380638753186
# 2022-01-02T00:00:00,37,1,3,34,0,1,33103.39858539426,5700.031886222947,1938.0475608526133,88.00704255824857
# 2022-06-30T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-10-11T00:00:00,71,1,34,37,1,0,46305.58684669107,36355.638216270636,1966.8352294876765,1966.8352294876765
# 2019-03-03T00:00:00,51,2,3,48,1,1,45854.850776824314,5979.902265078613,3915.9470411092566,2080.6065734746194
# 2019-09-01T00:00:00,25,5,11,14,5,0,34688.68199073892,24027.080223947738,9148.023037521858,9148.023037521858
# 2021-09-12T00:00:00,22,0,4,18,0,0,23840.045063979054,11122.610743287029,0.0,0.0
# 2022-04-17T00:00:00,36,3,5,31,0,3,29817.281949954995,6473.7509315061925,5266.556551243175,195.40567114799114
# 2019-06-09T00:00:00,114,10,22,92,1,9,51866.357126520605,30792.09890826142,9263.856445162828,2383.0597259176266
# 2021-12-05T00:00:00,33,3,3,30,0,3,28541.453842028255,6096.2423967419445,4419.645344054142,102.78128137788342
# 2020-09-06T00:00:00,3,0,1,2,0,0,4918.798674111724,2155.011454369162,0.0,0.0
# 2022-07-30T00:00:00,30,0,9,21,0,0,36862.20053329048,19655.937505410817,0.0,0.0
# 2022-06-04T00:00:00,10,1,9,1,1,0,9926.656898217376,9817.935620686267,1965.731246657973,1965.731246657973
# 2021-05-16T00:00:00,20,2,9,11,1,1,34158.751090177204,22453.481829200748,3887.4529820995062,2003.0800058780978
# 2022-01-16T00:00:00,12,2,6,6,1,1,10760.53224678122,5958.295226125504,1821.9705537118211,824.9490754087449
# 2019-12-29T00:00:00,16,0,2,14,0,0,20825.97834594357,3637.0513907178383,0.0,0.0
# 2020-05-17T00:00:00,3,0,0,3,0,0,5868.972238405043,209.39939667001434,0.0,0.0
# 2022-04-24T00:00:00,14,0,2,12,0,0,15801.559843427105,4458.336421721893,0.0,0.0
# 2021-04-11T00:00:00,27,1,10,17,1,0,7628.593604052722,3908.3800634236477,951.7858856625205,951.7858856625205
# 2020-03-29T00:00:00,6,0,1,5,0,0,2370.0528157059152,1533.9993223346212,0.0,0.0
# 2019-08-25T00:00:00,33,4,12,21,2,2,35933.09077620172,25594.354792537997,7098.84902325764,4985.392953396618
# 2020-05-10T00:00:00,56,1,7,49,1,0,31206.970339244388,11962.900024363082,1926.8583418167343,1926.8583418167343
# 2021-06-06T00:00:00,14,1,3,11,0,1,14205.19092725193,3260.3898344756676,2121.2967711437013,40.39578812236541
# 2020-05-31T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-06-27T00:00:00,5,0,3,2,0,0,9407.271824005013,5545.6140155656285,0.0,0.0
# 2020-07-26T00:00:00,6,3,0,6,0,3,9732.576530316775,3283.7096728051993,3905.649122922612,399.58102567933486
# 2019-09-08T00:00:00,16,2,12,4,2,0,21140.027355275557,18976.161473545922,3926.7428904983612,3926.7428904983612
# 2021-08-15T00:00:00,19,3,5,14,1,2,30539.144541366433,11526.07578636345,4761.121516250339,2466.767428529976
# 2019-09-29T00:00:00,28,0,5,23,0,0,24696.89283132553,9118.30419865229,0.0,0.0
# 2020-09-27T00:00:00,14,0,2,12,0,0,14383.271829050767,4612.874844005522,0.0,0.0
# 2021-09-19T00:00:00,2,0,1,1,0,0,3876.954361691458,1955.7824590387188,0.0,0.0
# 2019-10-06T00:00:00,9,1,2,7,0,1,16156.470801551974,4333.166517269479,1948.1324875732928,18.073494757760038
# 2022-05-08T00:00:00,10,1,7,3,1,0,9961.395352414309,9731.716221276012,1980.2281270833005,1980.2281270833005
# 2021-05-30T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-03-24T00:00:00,10,2,0,10,0,2,15093.005822812987,931.5123538603118,3931.61247429182,99.72346037468091
# 2021-09-05T00:00:00,4,0,2,2,0,0,7247.222887696293,4860.120270063212,0.0,0.0
# 2019-12-01T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-01-09T00:00:00,5,1,0,5,0,1,7975.762953458875,293.00247140437733,1924.9263757932022,119.36799303014486
# 2019-04-28T00:00:00,20,1,8,12,0,1,19028.48918579308,14070.812415334647,1944.3877791217153,226.90853477055174
# 2022-06-27T00:00:00,12,0,0,12,0,0,10314.468500303428,892.9800788115913,0.0,0.0
# 2019-04-21T00:00:00,22,2,15,7,1,1,20310.507000165824,17729.67126314843,5309.174291071062,3978.1885549665967
# 2019-01-20T00:00:00,2,0,0,2,0,0,2750.153165797207,753.1643783525958,0.0,0.0
# 2019-10-27T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-01-12T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-04-10T00:00:00,6,0,2,4,0,0,6518.464305988192,3592.3662088175242,0.0,0.0
# 2019-02-24T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-04-18T00:00:00,2,0,0,2,0,0,3321.030995191038,68.92819481373942,0.0,0.0
# 2020-04-26T00:00:00,21,0,5,16,0,0,8505.428118189782,2419.2602785825393,0.0,0.0
# 2022-04-03T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-09-26T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-09-22T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-01-27T00:00:00,1,0,0,1,0,0,1404.7996615502057,18.520308038015408,0.0,0.0
# 2019-10-13T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-04-04T00:00:00,4,0,3,1,0,0,7762.162007300611,6430.499357570979,0.0,0.0
# 2019-12-22T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-03-20T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-10-03T00:00:00,1,0,0,1,0,0,1955.923626325069,20.055857496497293,0.0,0.0
# 2020-02-23T00:00:00,1,0,1,0,0,0,1962.036175055948,1962.036175055948,0.0,0.0
# 2020-03-15T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-02-09T00:00:00,1,0,0,1,0,0,873.6459531683704,28.581190850723054,0.0,0.0
# 2020-10-18T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-03-10T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-09-20T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-10-04T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-04-25T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-12-08T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-02-17T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-12-26T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-02-10T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-03-21T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-03-01T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-02-03T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-01-13T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-03-17T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-03-31T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-09-15T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-11-03T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-11-10T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-11-24T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-12-15T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-01-05T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-01-19T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-01-26T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-02-02T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-02-16T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-03-08T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-04-05T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2020-09-13T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-10-17T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-10-31T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-11-07T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-11-14T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-11-21T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-11-28T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-12-12T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-01-23T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-01-30T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-02-06T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-02-13T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-02-20T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-03-13T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-03-27T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2022-02-27T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2021-12-19T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0
# 2019-11-17T00:00:00,0,0,0,0,0,0,0.0,0.0,0.0,0.0


# day_event_latlonweights(event_name, date) = begin
#   window_mid_time, window_half_size = convective_day_window_mid_time_and_half_size(date)
#   if endswith(event_name, "wind_adj")
#     measured_events, estimated_events, gridded_normalization =
#       if event_name == "wind_adj"
#         StormEvents.conus_measured_severe_wind_events(), StormEvents.conus_estimated_severe_wind_events(), TrainingShared.day_estimated_wind_gridded_normalization()
#       elseif event_name == "sig_wind_adj"
#         StormEvents.conus_measured_sig_wind_events(), StormEvents.conus_estimated_sig_wind_events(), TrainingShared.day_estimated_sig_wind_gridded_normalization()
#       else
#         error("unknown adj event $event_name")
#       end
#     measured_segments  = StormEvents.event_segments_around_time(measured_events,  window_mid_time, window_half_size)
#     estimated_segments = StormEvents.event_segments_around_time(estimated_events, window_mid_time, window_half_size)
#     measured_latlonweights = map(measured_segments) do ((lat1, lon1), (lat2, lon2))
#       lat, lon = (mean([lat1, lat2]), mean([lon1, lon2]))
#       (lat, lon, 1.0)
#     end
#     estimated_latlonweights = map(estimated_segments) do ((lat1, lon1), (lat2, lon2))
#       # use mean reweighting of of start and end latlons
#       # (this is how we did it for the climatology maps)
#       factor1 = Grids.lookup_nearest(Grid130.GRID_130_CROPPED, gridded_normalization, (lat1, lon1))
#       factor2 = Grids.lookup_nearest(Grid130.GRID_130_CROPPED, gridded_normalization, (lat2, lon2))
#       factor = mean([factor1, factor2])
#       lat, lon = (mean([lat1, lat2]), mean([lon1, lon2]))
#       (lat, lon, factor)
#     end
#     vcat(measured_latlonweights, estimated_latlonweights)
#   else
#     events = event_name_to_unadj_events[event_name]
#     segments = StormEvents.event_segments_around_time(events, window_mid_time, window_half_size)
#     latlonweights = map(segments) do ((lat1, lon1), (lat2, lon2))
#       lat, lon = (mean([lat1, lat2]), mean([lon1, lon2]))
#       (lat, lon, 1.0)
#     end
#     latlonweights
#   end
# end

# function gaussian_blur(grid, conus_bitmask, ฯ_km, vals; only_in_conus = false)
#   mid_xi = grid.width รท 2
#   mid_yi = grid.height รท 2

#   # a box roughly 6*ฯ_km on each side
#   radius_nx = findfirst(mid_xi:grid.width) do east_xi
#     GeoUtils.instantish_distance(grid.latlons[Grids.get_grid_i(grid, (mid_yi, mid_xi))], grid.latlons[Grids.get_grid_i(grid, (mid_yi, east_xi))]) / 1000.0 > ฯ_km*3
#   end
#   radius_ny = findfirst(mid_yi:grid.height) do north_yi
#     GeoUtils.instantish_distance(grid.latlons[Grids.get_grid_i(grid, (mid_yi, mid_xi))], grid.latlons[Grids.get_grid_i(grid, (north_yi, mid_xi))]) / 1000.0 > ฯ_km*3
#   end

#   # println(stderr, "ฯ_km = $(ฯ_km), radius_nx = $radius_nx, radius_ny = $radius_ny")

#   out = zeros(Float64, size(vals))

#   if ฯ_km == 0
#     out[conus_bitmask] = vals[conus_bitmask]
#     return out
#   end

#   for y1 in 1:grid.height
#     Threads.@threads for x1 in 1:grid.width
#       weight = eps(1.0)
#       amount = 0.0
#       i1 = Grids.get_grid_i(grid, (y1, x1))
#       (!only_in_conus || conus_bitmask[i1]) || continue
#       val_ll = grid.latlons[i1]
#       for y2 in clamp(y1 - radius_ny, 1, grid.height):clamp(y1 + radius_ny, 1, grid.height)
#         for x2 in clamp(x1 - radius_nx, 1, grid.width):clamp(x1 + radius_nx, 1, grid.width)
#           i2 = Grids.get_grid_i(grid, (y2, x2))
#           conus_bitmask[i2] || continue
#           ll = grid.latlons[i2]
#           meters = GeoUtils.instantish_distance(val_ll, ll)
#           w = exp(-(meters/1000)^2 / (2 * ฯ_km^2)) * grid.point_areas_sq_miles[i2]
#           amount += w * vals[i2]
#           weight += w
#         end
#       end
#       out[i1] = amount / weight
#     end
#   end

#   out
# end

# function to_csv(event_name, date)
#   data = compute_day_labels(event_name, date)
#   ฯ_km = 120
#   data_blurred = gaussian_blur(GRID, CONUS_MASK, ฯ_km, data; only_in_conus = true)

#   time_title = Printf.@sprintf "%04d-%02d-%02d" Dates.year(date) Dates.month(date) Dates.day(date)

#   open("practically_perfect_$(event_name)_$(time_title).csv", "w") do csv
#     println(csv, "lat,lon,prob")
#     for ((lat,lon), prob) in zip(GRID.latlons, data_blurred)
#       println(csv, "$lat,$lon,$prob")
#     end
#   end

#   open("ground_truth_gridded_$(event_name)_$(time_title).csv", "w") do csv
#     println(csv, "lat,lon,prob")
#     for ((lat,lon), prob) in zip(GRID.latlons, data)
#       println(csv, "$lat,$lon,$prob")
#     end
#   end

#   open("events_$(event_name)_$(time_title).csv", "w") do csv
#     println(csv, "lat,lon,weight")
#     for (lat, lon, weight) in day_event_latlonweights(event_name, date)
#       println(csv, "$lat,$lon,$weight")
#     end
#   end
# end

# to_csv("wind", Dates.Date(2022,7,23))
# to_csv("wind", Dates.Date(2020,6,21))
# to_csv("wind", Dates.Date(2022,7,24))
# to_csv("sig_wind", Dates.Date(2022,7,23))
# to_csv("sig_wind", Dates.Date(2020,6,21))
# to_csv("sig_wind", Dates.Date(2022,7,24))
# to_csv("wind_adj", Dates.Date(2022,7,23))
# to_csv("wind_adj", Dates.Date(2020,6,21))
# to_csv("wind_adj", Dates.Date(2022,7,24))
# to_csv("sig_wind_adj", Dates.Date(2022,7,23))
# to_csv("sig_wind_adj", Dates.Date(2020,6,21))
# to_csv("sig_wind_adj", Dates.Date(2022,7,24))
